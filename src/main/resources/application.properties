#configuring application name
#configuring port
server.port = 8080


#Loggin d'application
logging.level.org.springframework.web=info
logging.level.org.springframework.core=info
logging.level.org.springframework.beans=info
logging.level.org.springframework.context=info

storage.folder=c:/logs
#cors.allowed-urls=*
cors.allowed-urls=https://dawan.fr/,https://app.dawan.fr
#File weight
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=50MB

#autoriser des caractères dans la req
server.tomcat.relaxed-query-chars=|,{,},[,]
server.tomcat.relaxed-path-chars=|,{,},[,]

#configuration de la datasource
spring.jpa.generate-ddl=true
spring.sql.init.mode=always
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3307/trainingdb?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

#config de JPA/Hibernate
#dialect : classe permettant de traduire les req JP-QL vers le SQL spécifique au SGBD utilis
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
#Stratgie utilise pour générer les tables en Bdd
spring.jpa.hibernate.ddl-auto=update

#on peut exporter les req de création du schéma dans un fichier .sql
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

spring.jpa.show-sql=true