package fr.dawan.training.controller;

import fr.dawan.training.entities.Product;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;

@RestController
@RequestMapping("/api/products")
public class ProductController {
    @Autowired
    private ObjectMapper objectMapper;
    @Value("${storage.folder}")
    private String storageFolder;
    @PostMapping(value="/upload-image/{productId}", consumes = "multipart/form-data", produces = "application/json")
    public ResponseEntity<Product> uploadImage(@RequestParam("file")MultipartFile file,
                                               @PathVariable("productId") long id) throws Exception
    {
        String filePath = "/" + id + "-" + file.getOriginalFilename();
        File f = new File((storageFolder+filePath));
        try(BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(f))){
            bos.write(file.getBytes());
        }
        Product p = new Product();
        p.setId(id);
        p.setImagePath(filePath);
        //...
        return ResponseEntity.ok(p);
}
    @PostMapping(consumes = "multipart/form-data", produces = "application/json")
    public ResponseEntity<Product> saveProduct(@RequestParam("productStr") String productStr, @RequestPart("file") MultipartFile file) throws Exception{

        Product prod = objectMapper.readValue(productStr, Product.class);

        //insert prod into DB - id autogenerated

        String filePath = "/"+prod.getId()+"-"+file.getOriginalFilename();

        File f = new File(storageFolder+filePath);
        try(BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(f))){
            bos.write(file.getBytes());
        }


        prod.setImagePath(filePath);

        //Update prod to save imagepath

        return ResponseEntity.ok(prod);
    }
}